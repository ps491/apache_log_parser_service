version: '3.7'

services:
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - dgs

  db:
    image: postgres
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./pg_data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - dgs

  app:
    container_name: app
    build:
      context: .
      dockerfile: app/Dockerfile
    entrypoint: /app/entrypoint.sh
    env_file:
      - .env.dev
    ports:
      - "8000:8000"
    volumes:
      - ${LOG_PATH}:/app/logs
      - ./app:/app/
    networks:
      - dgs
    depends_on:
      - redis
      - db

  celery_worker:
    restart: unless-stopped
    build:
      context: .
      dockerfile: app/Dockerfile
    command: sh -c "poetry run celery -A src worker -l info --pool=solo"
    container_name: celery_worker
    env_file:
      - .env.dev
    volumes:
      - ${LOG_PATH}:/app/logs
      - ./app:/app/
    depends_on:
      - redis
      - db
      - app
    networks:
      - dgs



  celery-beat:
    build:
      context: .
      dockerfile: app/Dockerfile
    command: celery -A src beat -l info
#    container_name: celery_beat
    env_file:
      - ./app/.env.dev
    volumes:
      - ./app:/app/
    depends_on:
      - app
      - redis
      - db
      - celery_worker
    networks:
      - mailsendler
networks:
  dgs:
    driver: bridge
